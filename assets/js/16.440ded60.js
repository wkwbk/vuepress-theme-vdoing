(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{432:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("集合就是由若干个确定的元素所构成的整体。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"集合体系图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合体系图"}},[t._v("#")]),t._v(" 集合体系图")]),t._v(" "),s("p",[s("strong",[t._v("List、Set 集合体系图：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.lisir.me/image/posts/c7f47f99/20230502084835.png",alt:"20230502084835"}})]),t._v(" "),s("p",[s("strong",[t._v("Map 集合体系图：")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.lisir.me/image/posts/c7f47f99/20230504113740.png",alt:"20230504113740"}})]),t._v(" "),s("h2",{attrs:{id:"单列集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单列集合"}},[t._v("#")]),t._v(" 单列集合")]),t._v(" "),s("h3",{attrs:{id:"iterator-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iterator-接口"}},[t._v("#")]),t._v(" Iterator 接口")]),t._v(" "),s("p",[t._v("迭代器（Iterator）主要用来操作 Java 中的集合对象（Collection），迭代器提供了统一的语法进行集合对象遍历操作，无需关心集合对象内部的实现方式，迭代器只能向前移，无法后退。")]),t._v(" "),s("p",[s("strong",[t._v("Iterator 接口的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Iterator 接口的对象称为迭代器，主要用于遍历 Collection 集合中的元素。")])]),t._v(" "),s("li",[s("p",[t._v("Iterator 接口的对象仅用于遍历集合，它本身并不存放对象。")])])]),t._v(" "),s("p",[s("strong",[t._v("Iterator 接口的方法：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名称")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("hasNext()")])]),t._v(" "),s("td",[t._v("判断是否还有下一个元素")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("next()")])]),t._v(" "),s("td",[t._v("返回下一个元素")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意：在调用 "),s("code",[t._v("next()")]),t._v(" 方法之前必须要调用 "),s("code",[t._v("hasNext()")]),t._v(" 进行检测。若不进行检测，且下一条记录无效，直接调用 "),s("code",[t._v("next()")]),t._v(" 会抛出 NoSuchElementException 异常。")])]),t._v(" "),s("h3",{attrs:{id:"collection-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collection-接口"}},[t._v("#")]),t._v(" Collection 接口")]),t._v(" "),s("p",[t._v("Collection 接口是 List、Set 和 Queue 接口的父接口，通常情况下不被直接使用。Collection 接口定义了一些通用的方法，通过这些方法可以实现对集合的基本操作。定义的方法既可用于操作 Set 集合，也可用于操作 List 和 Queue 集合。")]),t._v(" "),s("p",[s("strong",[t._v("Collection 接口的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Collection 的实现类可以存放多个元素，每个元素可以是 Object。")])]),t._v(" "),s("li",[s("p",[t._v("Collection 的实现类，有些可以存放重复的元素，有些不可以。")])]),t._v(" "),s("li",[s("p",[t._v("Collection 的实现类，有些是有序的（List），有些是无序的（Set）。")])]),t._v(" "),s("li",[s("p",[t._v("Collection 接口没有直接的实现子类，是通过它的子接口 List 和 Set 来实现的。")])]),t._v(" "),s("li",[s("p",[t._v("所有实现了 Collection 接口的集合类都有一个 "),s("code",[t._v("iterator()")]),t._v(" 方法，用于返回一个迭代器。")])])]),t._v(" "),s("p",[s("strong",[t._v("Collection 接口的方法：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名称")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("add()")])]),t._v(" "),s("td",[t._v("添加单个元素")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("addAll()")])]),t._v(" "),s("td",[t._v("添加多个元素")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("remove()")])]),t._v(" "),s("td",[t._v("删除指定元素")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("removeAll()")])]),t._v(" "),s("td",[t._v("删除多个元素")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("contains()")])]),t._v(" "),s("td",[t._v("查找元素是否存在")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("containsAll()")])]),t._v(" "),s("td",[t._v("查找多个元素是否都存在")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("size()")])]),t._v(" "),s("td",[t._v("获取元素个数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("isEmpty()")])]),t._v(" "),s("td",[t._v("判断是否为空")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("clear()")])]),t._v(" "),s("td",[t._v("清除所有元素")])])])]),t._v(" "),s("h3",{attrs:{id:"list-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list-接口"}},[t._v("#")]),t._v(" List 接口")]),t._v(" "),s("p",[t._v("List 是一个有序、可重复的集合，集合中每个元素都有其对应的顺序索引。")]),t._v(" "),s("p",[s("strong",[t._v("List 接口的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("List 接口是 Collection 接口的子接口。")])]),t._v(" "),s("li",[s("p",[t._v("List 集合中的元素有序（添加顺序和取出顺序一致）、且可重复。")])]),t._v(" "),s("li",[s("p",[t._v("List 集合中的每个元素都有其对应的顺序索引（从 0 开始），即支持索引。")])]),t._v(" "),s("li",[s("p",[t._v("List 集合中的元素都对应一个整数型的序号记载元素在集合中的位置，可以根据序号存取集合中的元素。")])])]),t._v(" "),s("p",[s("strong",[t._v("List 接口的方法：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名称")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("get()")])]),t._v(" "),s("td",[t._v("获取此集合中指定索引位置的元素")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("set()")])]),t._v(" "),s("td",[t._v("替换此集合中指定索引位置的元素")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("indexOf()")])]),t._v(" "),s("td",[t._v("返回此集合中第一次出现指定元素的索引，如果此集合不包含该元素，则返回 -1")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("lastIndexOf()")])]),t._v(" "),s("td",[t._v("返回此集合中最后一次出现指定元素的索引，如果此集合不包含该元素，则返回 -1")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("subList()")])]),t._v(" "),s("td",[t._v("截取集合中的一部分形成一个新的集合并返回")])])])]),t._v(" "),s("p",[s("strong",[t._v("List 接口的遍历方式：")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以 ArrayList 类为例，其他 List 接口的实现类同理")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("List")]),t._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"三国演义"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"罗贯中"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小李飞刀"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"古龙"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"红楼梦"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"曹雪芹"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式一：使用迭代器")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第一种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" iterator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 arrayList 的迭代器")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" book "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回下一个元素，使用 Object 类接收")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        iterator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重置迭代器")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式二：使用增强 for 循环遍历集合，其底层任然是迭代器")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第二种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" book "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("book"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式三：使用普通 for 循环")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第三种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("author "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAuthor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAuthor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("author "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book{"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name=\'"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", author=\'"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" author "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'\\''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", price="')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br"),s("span",{staticClass:"line-number"},[t._v("72")]),s("br"),s("span",{staticClass:"line-number"},[t._v("73")]),s("br"),s("span",{staticClass:"line-number"},[t._v("74")]),s("br"),s("span",{staticClass:"line-number"},[t._v("75")]),s("br"),s("span",{staticClass:"line-number"},[t._v("76")]),s("br"),s("span",{staticClass:"line-number"},[t._v("77")]),s("br"),s("span",{staticClass:"line-number"},[t._v("78")]),s("br")])]),s("h4",{attrs:{id:"arraylist-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist-类"}},[t._v("#")]),t._v(" ArrayList 类")]),t._v(" "),s("p",[s("strong",[t._v("ArrayList 和 Vector 类的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("两者几乎是一样的，区别在于 Vector 类是线程安全的，因此效率差于 ArrayList 类。")])]),t._v(" "),s("li",[s("p",[t._v("底层都是使用 Object 类型的数组 "),s("code",[t._v("elementData")]),t._v(" 来存储元素。")])]),t._v(" "),s("li",[s("p",[t._v("底层都实现了可变长数组，可以添加任意元素且可以重复，包括 "),s("code",[t._v("null")]),t._v(" 值。")])])]),t._v(" "),s("p",[s("strong",[t._v("ArrayList 和 Vector 类的扩容机制：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果使用无参构造器创建对象时，初始 "),s("code",[t._v("elementData")]),t._v(" 容量为 0，第一次添加元素则扩容 "),s("code",[t._v("elementData")]),t._v(" 为 10。")])]),t._v(" "),s("li",[s("p",[t._v("如需再次扩容，ArrayList 类扩容为原来大小的 1.5 倍，Vector 类则是扩容为原来的 2 倍。")])]),t._v(" "),s("li",[s("p",[t._v("如果使用的是指定大小的构造器，则初始 "),s("code",[t._v("elementData")]),t._v(" 容量为指定大小，扩容机制不变。")])])]),t._v(" "),s("h4",{attrs:{id:"linkedlist-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist-类"}},[t._v("#")]),t._v(" LinkedList 类")]),t._v(" "),s("p",[s("strong",[t._v("LinkedList 类的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("LinkedList 类是线程不安全的。")])]),t._v(" "),s("li",[s("p",[t._v("底层使用 Node（静态内部类）类型的结点来存储元素。")])]),t._v(" "),s("li",[s("p",[t._v("底层有两个属性 "),s("code",[t._v("first")]),t._v(" 和 "),s("code",[t._v("last")]),t._v(" 分别指向头结点和尾结点。")])]),t._v(" "),s("li",[s("p",[t._v("每个结点中又有三属性，"),s("code",[t._v("prev")]),t._v(" 指向直接前驱结点，"),s("code",[t._v("next")]),t._v(" 指向直接后继结点，"),s("code",[t._v("item")]),t._v(" 存储真正的元素。")])]),t._v(" "),s("li",[s("p",[t._v("底层实现了双向链表和双端队列，可以添加任意元素且可以重复，包括 "),s("code",[t._v("null")]),t._v(" 值。")])]),t._v(" "),s("li",[s("p",[t._v("底层采用双向链表的结构保存元素，这种结构的优点是便于向集合中插入或者删除元素。")])])]),t._v(" "),s("h4",{attrs:{id:"两者的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两者的区别"}},[t._v("#")]),t._v(" 两者的区别")]),t._v(" "),s("p",[s("strong",[t._v("ArrayList 和 LinkedList 类的区别：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("需要频繁修改和查询元素时，使用 ArrayList 类。")])]),t._v(" "),s("li",[s("p",[t._v("需要频繁插入和删除元素时，使用 LinkedList 类。")])]),t._v(" "),s("li",[s("p",[t._v("ArrayList 是底层基于可变长数组，增删效率较低（扩容需要大量拷贝），改查效率较高（通过索引直接定位）。")])]),t._v(" "),s("li",[s("p",[t._v("LinkedList 是底层基于双向链表，增删效率较高（元素通过指针连接），改查效率较低（查询需要依次遍历）。")])]),t._v(" "),s("li",[s("p",[t._v("ArrayList 与 LinkedList 都是 List 接口的实现类，因此都实现了 List 的所有未实现的方法，只是实现的方式有所不同。")])])]),t._v(" "),s("h3",{attrs:{id:"set-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-接口"}},[t._v("#")]),t._v(" Set 接口")]),t._v(" "),s("p",[t._v("Set 是一个无序、不可重复的集合，且没有索引。")]),t._v(" "),s("p",[s("strong",[t._v("Set 接口的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Set 接口是 Collection 接口的子接口。")])]),t._v(" "),s("li",[s("p",[t._v("Set 集合中的元素无序（添加顺序和取出顺序不一致，但是取出顺序是固定的），且不可重复。")])]),t._v(" "),s("li",[s("p",[t._v("Set 集合中的元素不按特定的方式排序，只是简单地把元素加入集合。")])]),t._v(" "),s("li",[s("p",[t._v("Set 集合中不能包含重复的元素，并且只允许包含一个 "),s("code",[t._v("null")]),t._v(" 值。")])])]),t._v(" "),s("p",[s("strong",[t._v("Set 接口的方法：")])]),t._v(" "),s("p",[t._v("和 List 接口一样，Set 接口也是 Collection 的子接口，因此常用方法和 Collection 接口一样。")]),t._v(" "),s("p",[s("strong",[t._v("Set 接口的遍历方式：")])]),t._v(" "),s("p",[t._v("和 Collection 的遍历方式一样，可以使用迭代器和增强 "),s("code",[t._v("for")]),t._v(" 循环，但不能使用索引的方式来获取。")]),t._v(" "),s("h4",{attrs:{id:"hashset-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset-类"}},[t._v("#")]),t._v(" HashSet 类")]),t._v(" "),s("p",[s("strong",[t._v("HashSet 类的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HashSet 类是线程不安全的。")])]),t._v(" "),s("li",[s("p",[t._v("底层使用 Node（静态内部类）类型的结点数组 "),s("code",[t._v("table")]),t._v(" 来存储元素。")])]),t._v(" "),s("li",[s("p",[t._v("底层实际上是 HashMap 类，是由数组和链表以及红黑树构成的。")])]),t._v(" "),s("li",[s("p",[t._v("HashSet 类是按照 Hash 算法来存储集合中的元素，因此具有很好的存取和查找性能。")])])]),t._v(" "),s("p",[s("strong",[t._v("HashSet 类添加元素的底层机制：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("添加元素时会先计算哈希值，再将哈希值转换为索引值。")])]),t._v(" "),s("li",[s("p",[t._v("找到 "),s("code",[t._v("table")]),t._v(" 数组，查看该索引的位置是否有元素。")])]),t._v(" "),s("li",[s("p",[t._v("如果没有则直接加入元素。如果有，则比较两个元素是否相同。")])]),t._v(" "),s("li",[s("p",[t._v("相同就放弃添加，不相同就以链表的方式添加到尾部，形成数组加链表的模式。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：比较两个元素是否相同是通过 "),s("code",[t._v("equals()")]),t._v(" 方法和 "),s("code",[t._v("hashCode()")]),t._v(" 方法的返回值来一同决定的；"),s("code",[t._v("equals()")]),t._v(" 方法和 "),s("code",[t._v("hashCode()")]),t._v(" 方法可以重写来修改比较的标准；只有在哈希值相同的情况下才会使用 "),s("code",[t._v("equals()")]),t._v(" 方法进行比较。")])])])]),t._v(" "),s("p",[s("strong",[t._v("HashSet 类扩容和转成红黑树的底层机制：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("第一次添加元素时，"),s("code",[t._v("table")]),t._v(" 数组扩容到 16，且临界值设为 "),s("code",[t._v("16 * 0.75 = 12")]),t._v("（"),s("code",[t._v("0.75")]),t._v(" 是加载因子）。")])]),t._v(" "),s("li",[s("p",[t._v("当集合中的元素个数达到临界值 12 时，"),s("code",[t._v("table")]),t._v(" 数组就会扩容到 "),s("code",[t._v("16 * 2 = 32")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("新的临界值就是 "),s("code",[t._v("32 * 0.75 = 24")]),t._v("，以此类推。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：这里的扩容机制判断的是整个集合中的元素个数，并非一定是 "),s("code",[t._v("table")]),t._v(" 数组中的元素个数。")])])]),t._v(" "),s("li",[s("p",[t._v("如果单条链表中元素达到 8，同时 "),s("code",[t._v("table")]),t._v(" 数组的大小达到 64 时，就会进行树化（红黑树），若 "),s("code",[t._v("table")]),t._v(" 数组大小未达到 64，则采用数组扩容机制进行扩容，直到 "),s("code",[t._v("table")]),t._v(" 数组大小达到 64，再树化。")]),t._v(" "),s("blockquote",[s("p",[t._v("注意：这里的扩容机制主要是为了防止单条链表上的元素过多，所以会进行扩容，加快树化的进度。")])])])]),t._v(" "),s("h4",{attrs:{id:"linkedhashset-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset-类"}},[t._v("#")]),t._v(" LinkedHashSet 类")]),t._v(" "),s("p",[s("strong",[t._v("LinkedHashSet 类的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("LinkedHashSet 类继承了 HashSet 类。")])]),t._v(" "),s("li",[s("p",[t._v("底层实际上是 LinkedHashMap 类，是由数组和双向链表构成的。")])]),t._v(" "),s("li",[s("p",[t._v("底层使用 Entry（静态内部类）类型的结点来存储元素。")])]),t._v(" "),s("li",[s("p",[t._v("每个结点中有 "),s("code",[t._v("before")]),t._v(" 和 "),s("code",[t._v("after")]),t._v(" 属性，"),s("code",[t._v("before")]),t._v(" 指向直接前驱结点，"),s("code",[t._v("after")]),t._v(" 指向直接后继结点。")])]),t._v(" "),s("li",[s("p",[t._v("底层是根据元素的哈希值决定元素的存储位置，同时使用双向链表维护元素的次序，这使得元素看起来是以插入顺序保存的。")])])]),t._v(" "),s("p",[s("strong",[t._v("LinkedHashSet 类添加元素的底层机制：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("LinkedHashSet 类和 HashSet 类的机制大同小异。")])]),t._v(" "),s("li",[s("p",[t._v("LinkedHashSet 类在添加元素时不仅会执行 HashSet 类同样的操作，同时还会将元素加入到双向链表。")])])]),t._v(" "),s("h2",{attrs:{id:"双列集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双列集合"}},[t._v("#")]),t._v(" 双列集合")]),t._v(" "),s("h3",{attrs:{id:"map-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map-接口"}},[t._v("#")]),t._v(" Map 接口")]),t._v(" "),s("p",[t._v("Map 是一种键值对（key-value）集合，Map 集合中的每一个元素都包含一个键（key）对象和一个值（value）对象。用于保存具有映射关系的数据。")]),t._v(" "),s("p",[s("strong",[t._v("Map 接口的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Map 集合中的 key 和 value 可以是任何引用类型的数据，会封装到 HashMap 类中的 Node 静态内部类对象中。")])]),t._v(" "),s("li",[s("p",[t._v("Map 集合中的 key 不允许重复，但 value 可以重复；key 可以有一个为 "),s("code",[t._v("null")]),t._v(" 值，value 可以多个为 "),s("code",[t._v("null")]),t._v(" 值。")])]),t._v(" "),s("li",[s("p",[t._v("Map 集合中的 key 和 value 之间存在单向一对一关系，即通过指定的 key 总能找到对应的 value。")])])]),t._v(" "),s("p",[s("strong",[t._v("Map 接口的方法：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名称")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("put()")])]),t._v(" "),s("td",[t._v("添加键值对")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("remove()")])]),t._v(" "),s("td",[t._v("根据键删除映射关系")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("get()")])]),t._v(" "),s("td",[t._v("根据键获取值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("size()")])]),t._v(" "),s("td",[t._v("获取键值对个数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("isEmpty()")])]),t._v(" "),s("td",[t._v("判断键值对个数是否为 0")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("containsKey()")])]),t._v(" "),s("td",[t._v("查找键是否存在")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("clear()")])]),t._v(" "),s("td",[t._v("清除所有键值对")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("keySet()")])]),t._v(" "),s("td",[t._v("获取所有的键")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("values()")])]),t._v(" "),s("td",[t._v("获取所有的值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("entrySet()")])]),t._v(" "),s("td",[t._v("获取所有的键值对")])])])]),t._v(" "),s("p",[s("strong",[t._v("Map 接口的遍历方式：")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Main")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张浩太"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No.2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"刘思诚"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No.3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王强文"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No.4"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李国量"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No.5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王路路"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一组：先取出所有的 key，通过 key 取出对应的 value")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),t._v(" keySet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keySet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用增强 for 循环")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第一种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" keySet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用迭代器")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第二种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" iterator1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keySet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二组：直接取出所有的 value")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),t._v(" values "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用增强 for 循环")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第三种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用迭代器")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第四种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" iterator2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第三组：通过 entrySet() 方法获取键值对")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),t._v(" entrySet "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("entrySet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用增强 for 循环")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第五种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" entry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" entrySet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用迭代器")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"========== 第六种方式 =========="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),t._v(" iterator3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" entrySet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" entry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iterator3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Entry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" entry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br")])]),s("h4",{attrs:{id:"hashmap-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap-类"}},[t._v("#")]),t._v(" HashMap 类")]),t._v(" "),s("p",[s("strong",[t._v("HashMap 类的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("HashMap 类是线程不安全的。")])]),t._v(" "),s("li",[s("p",[t._v("底层使用 Node（静态内部类）类型的结点数组 "),s("code",[t._v("table")]),t._v(" 来存储元素。")])]),t._v(" "),s("li",[s("p",[t._v("每个结点中又有四个属性，"),s("code",[t._v("key")]),t._v(" 存放键，"),s("code",[t._v("value")]),t._v(" 存放值，"),s("code",[t._v("hash")]),t._v(" 存放键的哈希值，"),s("code",[t._v("next")]),t._v(" 存放直接后继结点。")])])]),t._v(" "),s("p",[s("strong",[t._v("HashMap 类添加元素的底层机制：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("添加元素时，通过 "),s("code",[t._v("key")]),t._v(" 的哈希值得到在 "),s("code",[t._v("table")]),t._v(" 数组的索引。")])]),t._v(" "),s("li",[s("p",[t._v("判断该索引处是否有元素，如果没有则直接添加。")])]),t._v(" "),s("li",[s("p",[t._v("如果该索引处有元素，则判断该元素的 "),s("code",[t._v("key")]),t._v(" 是否和准备加入的元素的 "),s("code",[t._v("key")]),t._v(" 相等。")])]),t._v(" "),s("li",[s("p",[t._v("如果相等，则直接替换 "),s("code",[t._v("value")]),t._v("，如果不相等，则需要判断是树结构还是链表结构，做出相应的处理。")])]),t._v(" "),s("li",[s("p",[t._v("如果添加时发现容量不够，则需要扩容。HashMap 类的扩容和转成红黑树的底层机制和 HashSet 类相同。")])])]),t._v(" "),s("h4",{attrs:{id:"hashtable-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashtable-类"}},[t._v("#")]),t._v(" Hashtable 类")]),t._v(" "),s("p",[s("strong",[t._v("Hashtable 类的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Hashtable 类是线程安全的。")])]),t._v(" "),s("li",[s("p",[t._v("底层使用 Entry（静态内部类）类型的结点数组 "),s("code",[t._v("table")]),t._v(" 来存储元素。")])]),t._v(" "),s("li",[s("p",[t._v("Hashtable 类的使用方法基本上和 HashMap 类一样。")])]),t._v(" "),s("li",[s("p",[t._v("Hashtable 类的键和值都不能为 "),s("code",[t._v("null")]),t._v("，否则会抛出 NullPointerException 异常。")])])]),t._v(" "),s("p",[s("strong",[t._v("Hashtable 类扩容的底层机制：")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首次添加元素时，初始化 "),s("code",[t._v("table")]),t._v(" 数组为 11。")])]),t._v(" "),s("li",[s("p",[t._v("临界值为 "),s("code",[t._v("table")]),t._v(" 数组的大小乘以 0.75。")])]),t._v(" "),s("li",[s("p",[t._v("当集合中的元素达到临界值时，则按照原 "),s("code",[t._v("table")]),t._v(" 数组大小的两倍再加 1 进行扩容。")])])]),t._v(" "),s("h4",{attrs:{id:"properties-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties-类"}},[t._v("#")]),t._v(" Properties 类")]),t._v(" "),s("p",[s("strong",[t._v("Properties 类的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Properties 类继承了 Hashtable 类。")])]),t._v(" "),s("li",[s("p",[t._v("Properties 类的键和值都不能为 "),s("code",[t._v("null")]),t._v("，否则会抛出 NullPointerException 异常。")])])]),t._v(" "),s("h4",{attrs:{id:"treemap-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#treemap-类"}},[t._v("#")]),t._v(" TreeMap 类")]),t._v(" "),s("p",[s("strong",[t._v("TreeMap 类的特点：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("底层是由二叉树构成，实现了红黑树的结构。")])]),t._v(" "),s("li",[s("p",[t._v("TreeMap 类默认会对键进行排序，所以键必须实现自然排序和定制排序中的一种。")])])]),t._v(" "),s("h2",{attrs:{id:"集合选型规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合选型规则"}},[t._v("#")]),t._v(" 集合选型规则")]),t._v(" "),s("p",[t._v("在开发中，选择什么集合实现类，主要取决于业务操作特点，然后根据集合实现类的特性进行选择。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("先判断存储的类型：一组对象（单列）还是一组键值对（双列）。")])]),t._v(" "),s("li",[s("p",[t._v("一组对象：Collection 接口")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("允许重复的：List 接口")]),t._v(" "),s("ul",[s("li",[t._v("增删操作多：LinkedList 类")]),t._v(" "),s("li",[t._v("改查操作多：ArrayList 类")])])]),t._v(" "),s("li",[s("p",[t._v("不允许重复的：Set 接口")]),t._v(" "),s("ul",[s("li",[t._v("无序的：HashSet 类")]),t._v(" "),s("li",[t._v("可排序的：TreeSet 类")]),t._v(" "),s("li",[t._v("插入和取出顺序一致的：LinkedHashSet 类")])])])])]),t._v(" "),s("li",[s("p",[t._v("一组键值对：Map 接口")]),t._v(" "),s("ul",[s("li",[t._v("键是无序的：HashMap 类")]),t._v(" "),s("li",[t._v("键是可排序的：TreeMap 类")]),t._v(" "),s("li",[t._v("键的插入和取出顺序一致的：LinkedHashMap 类")]),t._v(" "),s("li",[t._v("可读取文件的：Properties 类")])])])]),t._v(" "),s("h2",{attrs:{id:"collections-工具类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#collections-工具类"}},[t._v("#")]),t._v(" Collections 工具类")]),t._v(" "),s("p",[t._v("Collections 类是一个操作 Set、List 和 Map 等集合的工具类。Collections 类中提供了一系列静态的方法对集合元素进行排序、查询和修改等操作。")]),t._v(" "),s("p",[s("strong",[t._v("Collections 工具类的常用方法：")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名称")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("Collections.reverse()")])]),t._v(" "),s("td",[t._v("反转 List 集合中元素的顺序")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Collections.shuffle()")])]),t._v(" "),s("td",[t._v("对 List 集合中的元素进行随机排序")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Collections.sort()")])]),t._v(" "),s("td",[t._v("根据元素的自然顺序对指定的 List 集合中的元素按升序排序")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Collections.swap()")])]),t._v(" "),s("td",[t._v("将指定 List 集合中的两个元素进行交换")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Collections.frequency()")])]),t._v(" "),s("td",[t._v("返回指定集合中指定元素的出现次数")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);